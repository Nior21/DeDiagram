# ПАРСИНГ И ОТОБРАЖЕНИЕ СХЕМ ИЗ ПРИЛОЖЕНИЯ dRAWeXPRESS (ФАЙЛЫ В ФОРМАТЕ .DE) В DESKTOP-ПРИЛОЖЕНИИ ВЕСИИЯ 1
# Это файл main.py содержит все тело программы. Дополнительные модули создавать пока не планируется

# План версий включает в себя
# - Основные разделы с нумерацией 1.01, 1.02 и т.д. ("1)", "2)")
# - Подразделы с нумерцией 1.01a, 1.02b и т.д. ("a
# И формируются версии согласно списку задач из OneNote - https://1drv.ms/o/s!Al0JMB8ECbBfhRllm5oPd-h8R2Oi

# Разработка ведется в ветке Develop, после выполнения целой задачи требуется сливать изменения в ветку master

# DONE 1.01 - СОЗДАН НОВЫЙ ПРОЕКТ "DeDiagram" И ДОБАВЛЕН В ЛОКАЛЬНЫЙ GIT

# Инициализируем библиотеки и подгружаем входящие данные
import re
from pathlib import Path

InputString = Path('Test.de').read_text()  # Кладем данные из файла в переменную InputString

print(InputString)  # Выводим входящие данные для проверки и сравнения результатов парсинга

# TODO 1.02 - РАСПАРСИТЬ СПОМОЩЬЮ БИБЛИОТЕКИ .RE И ПОЛУЧИТЬ ТАБЛИЦУ

# DONE 1.02a - Отделяем квадратные скобки начала и конца файла "[" "]"
StringNotEllipses = re.sub('[\[\]]', '', InputString)  # заменяю квадратные скобки пустым значением
# '[' и ']' требуется экранировать - '\[' и '\]'

# DONE 1.02b - Отображаем на вывод полученные данные в одну строку
print(StringNotEllipses)

# DONE 1.02c - Отделяем группы из "{" и "}"
Pattern = r'\{(.*?)\}'
# r'\{(.*?)\}' - регулярное выражение для отбора значений в фигурных скобках
# '{' и '}' - работают только в экранированном состоянии \{ и \}
# "." - обозначает любой символ
# *? - позовляет акууратно подобать значения только в фигурных скобках

for match in re.finditer(Pattern, StringNotEllipses):
    s = "{group}".format(
        group=match.group(1), begin=match.start(),
        end=match.end())

# TODO 1.02d - Отображаем на вывод в столбик данные по одной группе в строке
    print(s)  # Построчная печать найденных групп в фигурных скобках (ТАБУЛЯЦИЯ в начале строки ОБЯЗАТЕЛЬНА!

# TODO 1.02e - Распознаем отдельные элементы отделенные запятой и выводим в виде картежей построчно

# TODO 1.02f - Разбираем данные на типы и выдаем им названия по которым их опознавать в каждой строке

# TODO 1.02g - Отбрасываем данные с настройками таблицы, пока нет возможности выдать графическую схему

# TODO 1.02h - Выводим таблицу данных по типами

# TODO 1.03 - СОЗДАЕМ ОКНО С ГРАФИЧЕСКИМ ИНТЕРФЕЙСОМ

# TODO 1.03a - Рисуем в отдельном окне графическое поле

# TODO 1.03b - Рисуем на графическом поле линию с определенными координатами

# TODO 1.03c - Выводим текст в это отдельное графическое поле с определенными координатами

# TODO 1.04 - СОЗДАЕМ ФУНКЦИИ ДЛЯ ГРАФИЧЕСКИХ ЭЛЕМЕНТОВ (ЛИНИЙ И ТЕКСТА) С ПАРАМЕТРАМИ КАК В ТАБЛИЦЕ

# TODO 1.05 - ПЕРЕДАЕМ ДАННЫЕ ИЗ ТАБЛИЦЫ В ПАРАМЕТРЫ ФУНКЦИЙ ПО ЦИКЛУ ДО ОКОНЧАНИЯ СПИСКА ДАННЫХ
